# HTTP Server - Redirect all HTTP traffic to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name YOUR_DOMAIN.com www.YOUR_DOMAIN.com;

    # Redirect all HTTP requests to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS Server - Main application
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name YOUR_DOMAIN.com www.YOUR_DOMAIN.com;

    # SSL Certificate Configuration
    # Note: Combine certificate and chain: cat _.ubc.gg.crt GandiCert.pem > fullchain.crt
    ssl_certificate /path/to/MJCWebsite/backend/certificate/fullchain.crt;
    ssl_certificate_key /path/to/MJCWebsite/backend/certificate/mjcserver.key;

    # SSL Configuration (Mozilla Intermediate)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # SSL Session Cache
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Logging
    access_log /var/log/nginx/mjc-website-access.log;
    error_log /var/log/nginx/mjc-website-error.log;

    # Proxy to Node.js application
    location / {
        proxy_pass https://localhost:8443;
        proxy_http_version 1.1;

        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';

        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Proxy timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Disable buffering for real-time applications
        proxy_cache_bypass $http_upgrade;
        proxy_buffering off;
    }

    # Optional: Serve static files directly from nginx for better performance
    # Uncomment if you want nginx to serve static files instead of Node.js
    # location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
    #     root /path/to/MJCWebsite/build/dist;
    #     expires 1y;
    #     add_header Cache-Control "public, immutable";
    # }
}
